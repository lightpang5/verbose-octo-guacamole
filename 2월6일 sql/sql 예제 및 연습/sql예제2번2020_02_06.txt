 1.사원정보 테이블(EMPLOYEES)에서 사원번호, 이름, 급여, 업무, 입사일, 상사의 사원번호 출력,
이름은 성과 이름을 연결하여 Name 이라는 별칭으로 출력
[resultset rs = String.formate()
if(rs.next())
rs.getString(필드명) >> 별칭을 이용해서 필드명에 Name 으로 뽑을 수 있다. 실제 존재필드는 아니다

--> SELECT employee_id,concat(last_name,' ',first_name) as Name, salary, job_id, hire_date,manager_id FROM employees;

 2. 사원정보(EMPLOYEES) 테이블에서 사원의 성과 이름은 Name, 업무는 Job, 급여는 Salary, 연봉에 $100 보너스를 추가하여 계산한 값은 Increased Ann_Salary, 급여에 $100 보너스를 추가하여 계산한 연봉은 IncreasedSalary 라는 별칭으로 출력

--> SELECT concat(last_name,' ',first_name) as Name, job_id as Job, salary , (salary*12+100) as 'IncreasedAnn_Salary', (salary+100) as 'IncreasedSalary' FROM employees;

 3. 사원정보(EMPLOYEES) 테이블에서 모든 사원의 이름(last_name)과 연봉을 
"이름: 1 Year Salary = $연봉" 형식으로 출력하고, "1 Year Salary"라는 별칭을 붙여 출력하시오

--> SELECT concat(last_name,': 1 Year Salary = $',salary*12) as "1 Year Salary" from employees;

 4. HR 부서에서 예산 편성 문제로 급여 정보 보고서를 작성하려고 한다. 사원정보(EMPLOYEES) 테이블에서 급여가 $7,000~$10,000 범위 이외인 사람의 성과 이름(Name으로 별칭) 및 급여가 작은 순서로 출력하시오.

--> SELECT concat(last_name,' ',first_name) as Name,salary from employees where salary>=7000 and salary<=10000 order by salary asc;

 5. 사원의 이름(last_name) 중에 'e' 및 'o' 글자가 포함된 사원을 출력하시오. 이 때 머리글은 'e and o Name'라고 출력하시오.

--> SELECT concat(last_name,' ',first_name) as 'e and o Name' from employees where last_name like '%e%'or '%o%';

 6. 현재 날짜 타입을 날짜 함수를 통해 확인하고, 1995년 05월 20일부터 1996년 05월 20일 사이에 고용된 사원들의 성과 이름, 사원번호, 고용일자를 출력하시오. 단, 입사일이 빠른 순으로 정렬하시오.

---> SELECT concat(last_name,' ',first_name) as Name, employee_id, hire_date from employees where hire_date between '1995-05-20' and '1996-05-20' order by hire_date asc;

 7. HR 부서에서는 급여(salary)와 수당율(commission_pct)에 대한 지출 보고서를 작성하려고 한다. 이에 수당을 받는 모든 사원의 성과 이름(Name) , 급여, 업무 , 수당율을 출력하시오. 이때 급여가 큰 순서대로 정렬하되 급여가 같으면 수당율이 큰 순서대로 정렬.

--> SELECT concat(last_name,' ',first_name) as Name, salary, job_id,commission_pct from employees where commission_pct is not null order by salary desc ,commission_pct desc; 

 8.이번 분기에 60번 IT 부서에서는 신규 프로그램을 개발하고 보급하여 회사에 공헌하였다. 이에 해당 부서의 사원 급여를 12.3% 인상하기로 하였다. 60번 IT 부서 사원의 급여를 12.3% 인상하여 정수만 (반올림) 표시하는 보고서를 작성하시오 . 출력 형식은 사번, 이름과 성(Name) , 급여, 인상된급여 출력한다.

--> SELECT employee_id, concat(last_name,' ',first_name) as Name, job_id, salary,round(salary * 1.123,1) as "Increased Salary" from employees where department_id=60;

 9. 각 이름이 's'로 끝나는 사원들의 이름과 업무를 아래의 예와 같이 출력하고자 한다. 출력 시 성과 이름은 첫 글자가 대문자, 업무는 모두 대문자로 출력하고 머리글은 Employee JOBs.로 표시하시오.

--> select concat(first_name,' ',last_name,' is a ',job_id) as 'Employee JOBs.'  from employees where first_name like '%s';

 10. 모든 사원의 연봉을 표시하는 보고서를 작성하려고 한다. 보고서에 사원의 성과 이름(Name으로 별칭), 급여, 수당여부에 따른 연봉을 포함하여 출력하시오 . 수당여부는 수당이 있으면 "Salary + Commission", 수당이 없으면 "Salary only"라고 표시하고, 별칭은 적절히 붙인다. 또한 출력 시 연봉이 높은 순으로 정렬한다.

--> select concat(first_name,' ',last_name) as Name, salary, if(commission_pct is null,'Salary only','Salary + Commission') as CommissionStatus, salary*12 as 'Ann_Salary' from employees order by Ann_Salary desc;

 11. 모든 사원들 성과 이름(Name 으로 별칭) ,입사일 그리고 입사일이 어떤 요일이었는지 출력하시오 이때 주(week)의 시작인 일요일부터 출력되도록 정렬하시오.
[select 이름, 입사일, date_format(입사일,'%W') from 사원정보 order by date_fromat(hire_date,'%w');]

-->  select concat(first_name,' ',last_name) as Name, hire_date, case DAYOFWEEK(hire_date)
    when '1' then 'sunday'
    when '2' then 'monday'
    when '3' then 'tuesday'
    when '4' then 'wendesday'
    when '5' then 'thursday'
    when '6' then 'friday'
    when '7' then 'saturday'
    end DAYOFWEEK from employees order by DAYOFWEEK(hire_date) asc;

 12. 모든 사원은 직속 상사 및 직속 직원을 갖는다. 단, 최상위 또는 최하위 직원은 직속 상사 및 직원이 없다. 소속된 사원들 중 어떤사원의 상사로 근무 중인 사원의 총 수를 출력하시오.

--> select count(distinct(manager_id)) as BossCount from employees;

 13. 각 사원이 소속된 부서별로 급여 합계, 급여 평균, 급여 최대값, 급여 최소값을 집계하고자 한다  계산된 출력값은 6자리와 세자리 구분기호, $ 표시와 함께 출력하고 부서번호의 오름차순 정렬하시오. 단, 부서에 소속되지 않은 사원에 대한 정보는 제외하고 출력시 머리글은 아래 예시처럼 별칭(alias)처리하시오. [대충해서 뭔가 이상함 formate(sum(급여),0)  ..사용]

--> select  department_id,sum(salary),avg(salary),max(salary),min(salary) from employees group by department_id having department_id is not null;

 14. 사원들의 업무별 전체 급여 평균이 $ 10,000보다 큰 경우를 조회하여 업무, 급여 평균을 출력하시오. 단 업무에 사원(CLERK)이 포함된 경우는 제외하고 전체급여 평균이 높은 순서대로 출력하시오.

--> select  job_id, avg(salary) from employees where not job_id like "%CLERK%" group by job_id having avg(salary)>=10000 order by avg(salary) desc;

 15. HR 부서의 어떤 사원은 급여정보를 조회하는 업무를 맡고 있다. Tucker 사원(last_name)보다 급여를 많이 받고 있는 사원의 성과 이름, 업무, 급여를 출력하시오 

--> select  concat(first_name,' ',last_name) as Name, job_id, salary from employees where salary > (select salary from employees where last_name='Tucker');

16. 사원의 급여 정보 중 업무별 최소 급여를 받고 있는 사원의 성과 이름(Name), 업무, 급여, 입사일을 출력하시오.

--> select  concat(first_name,' ',last_name) as Name, job_id, min(salary),hire_date from employees group by job_id ; >> 19개 즉 같은 부서이면서 같은 최저급여이면 한명이 생략
--> select  concat(first_name,' ',last_name) as Name, job_id, salary, hire_date from employees aa where salary in (select min(salary) from employees bb where aa.job_id=bb.job_id group by job_id) ;
 
 17. 소속 부서의 평균 급여보다 많은 급여를 받는 사원에 대하여 사원의 성과 이름(Name으로 별칭), 급여, 부서번호, 업무를 출력하시오.[수정해야함 !]

-->  select  concat(first_name,' ',last_name) as Name, salary,department_id,job_id,avg(salary) from employees group by department_id having salary>avg(salary);

-->  select  concat(first_name,' ',last_name) as Name, salary,department_id,job_id,avg(salary) 
from employees aa where salary>(select avg(salary) from employees bb where aa.department_id=bb.department_id) group by department_id;   >>>> 수정 

 18. 사원들의 지역별 근무 현황을 조회하고자 한다. 도시 이름이 영문 'O' 로 시작하는 지역에 살고 있는 사원의 사번, 이름, 업무, 입사일을 출력하시오.

--> SELECT employee_id,concat(first_name,' ',last_name) as Name,job_id,hire_date FROM employees 
where department_id=(select departments.department_id from departments 
where departments.location_id=(select locations.location_id from locations where city like 'O%'));

 19. 모든 사원의 소속부서 평균연봉을 계산하여 사원별로 성과 이름(Name으로 별칭), 업무, 급여, 부서번호, 부서 평균연봉(Department Avg Salary로 별칭) 을 출력하시오.

--> select  concat(first_name,' ',last_name) as Name, job_id, salary,department_id,(select avg(salary) from employees bb where aa.department_id=bb.department_id group by department_id) as 'Department Avg Salary' from employees aa ;

 20. HR 부서에서는 신규프로젝트의 성공으로 해당하는 각 업무 자들에 대한 급여 인상안을 결정하고 다음과 같이 업무 별 급여 인상에 대해 적용하고자 한다. 현재 107명의 사원은 19개의 업무에 소속되어 근무 중이다. (Distinct job_id) 이 중 5개의 업무 자들에 대한 급여 인상이 각각 결정. 나머지 업무에 대해서는 인상이 동결. [미해결]

--> select concat(first_name,' ',last_name) as Name,job_id, salary, (case job_id when 'FI_ACCOUNT' then (salary*1.1) when 'IT_PROG' then (salary*1.1) when 'PU_CLERK' then (salary*1.1) when 'ST_MAN' then (salary*1.1) when 'SA_MAN' then (salary*1.1)) from employees where job_id in(select job_id from employees);

 22.

--> select 부서id , sum(급여) as 급여합계, case when sum(급여) > 100000 then "Excellent"
						when sum(급여) > 50000 then "Good"
						when sum(급여) > 10000 then "Medium"
					end
from 사원정보 group by 부서id;

 23.(case 중첩)

--> select 사원id, 급여,...
	case
		when 입사일 <'20000101' then

			case
				when 업무 like "%MGR%" then 급여 * 1.15
				when 업무 like "%MAN%" then 급여 * 1.20
			end
		when 입사일 > '20000101' then
			case
				when 업무 like "%MGR%" then 급여 * 1.25
			end
		end
	from 사원정보
 **25.(합집합 >> union 알아서 중복 제거가 된다.) 

--> select 업무id from 사원정보 union select 업무id from 업무이력


 26.정보(Employees) 테이블에 JOB_ID는 사원의 현재 업무를 뜻하고, JOB_HISTORY 에 JOB_ID 는 사원의 이전 업무를 뜻한다. 이 두 테이블을 교차해보면 업무가 변경된 사원의 정보도 볼 수 있지만 이전에 한번 했던 같은 업무를 그대로 하고 있는 사원의 정보도 볼 수 있다. 이 전에 한 번 했던 같은 업무를 보고 있는 사원의 사번과 업무를 출력하시오.

-->  


 29.(where 은 전체조건 having 은 group 의 조건.)

--> select 부서정보.부서명, count(사원정보.사원Id) from 사원정보, 부서정보 where 사원정보.부서 id = 부서정보.부서id 
 group by 부서명 having count(*) >= 5 order by count(*) desc

 30. 

--> select 사원정보.업무, 부서정보.부서명, 사원정보.입사일, 사원정보.급여, 급여.급여등급 from 사원정보,부서정보,급여 where 사원정보.부서id = 부서정보.부서id and 사원정보.급여 between lowest_sal and highest_sal











